name: Tooljet develop docker image build

on:
  push:
    branches:
      - develop

  workflow_dispatch:
    inputs:
      job-to-run:
        description: Enter the job name (tooljet-develop-image)
        options: ["tooljet-develop-image"]
        required: true

jobs:
  tooljet-develop-image:
    runs-on: ubuntu-latest
    if: |
      ${{ github.ref == 'refs/heads/develop' }} &&
      ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job-to-run == 'tooljet-develop-image' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: refs/heads/develop

      # Create Docker Buildx builder with platform configuration
      - name: Set up Docker Buildx
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -SL https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker buildx create --name mybuilder --platform linux/arm64,linux/amd64,linux/amd64/v2,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
          docker buildx use mybuilder

      - name: Set DOCKER_CLI_EXPERIMENTAL
        run: echo "DOCKER_CLI_EXPERIMENTAL=enabled" >> $GITHUB_ENV

      - name: use mybuilder buildx
        run: docker buildx use mybuilder

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production.Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/tooljet/tooljet-ce:${{ github.sha }}
          platforms: linux/amd64

      - name: generate config
        uses: appleboy/kubernetes-action@v0.0.1
        with:
          server: ${{ secrets.SERVER }}
          ca_cert: ${{ secrets.CA }}
          token: ${{ secrets.TOKEN }}
          output: kubeconfig.yaml

      - name: deploy
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          sudo chmod 644 kubeconfig.yaml
          kubectl -n ${{ secrets.NAMESPACE }} set image deployment/tooljet tooljet=${{ secrets.REGISTRY }}/tooljet/tooljet-ce:${{ github.sha }}
